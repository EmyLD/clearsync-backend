// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DIRECT_URL")
}


enum Role {
  PARTNER
  HOST
}

model User {
  id          Int           @id @default(autoincrement())
  email       String        @unique
  firstname   String
  lastname    String
  password    String
  Role        Role
  phone       String
  idCardFile  String?
  createdAt   DateTime      @default(now())
  PartnerInfo PartnerInfo[]
  HostInfo    HostInfo[]
}

model PartnerInfo {
  id          Int          @id @default(autoincrement())
  user        User         @relation(fields: [userId], references: [id])
  userId      Int
  siret       String
  city        String
  kbisFile    String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @default(now())
  prestations Prestation[] // Relation avec Prestation
}

model HostInfo {
  id           Int            @id @default(autoincrement())
  user         User           @relation(fields: [userId], references: [id])
  userId       Int
  address      String
  postalCode   String
  city         String
  calendarLink String?
  airbnbLinks  AirbnbLink[]
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @default(now())
  CalendarLink CalendarLink[]
  prestations  Prestation[]   // Relation avec Prestation
}

model AirbnbLink {
  id         Int      @id @default(autoincrement())
  link       String
  hostInfo   HostInfo @relation(fields: [hostInfoId], references: [id])
  hostInfoId Int
}

model CalendarLink {
  id         Int      @id @default(autoincrement())
  link       String
  hostInfo   HostInfo @relation(fields: [hostInfoId], references: [id])
  hostInfoId Int
}

model Prestation {
  id          Int         @id @default(autoincrement())
  hostId      Int
  partnerId   Int
  description String
  surface     Int
  price       Float
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @default(now())

  host        HostInfo    @relation(fields: [hostId], references: [id])
  partner     PartnerInfo @relation(fields: [partnerId], references: [id])
}
